generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      String   @default("USER")
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Product {
  id              String   @id @default(cuid())
  name            String
  slug            String   @unique
  description     String
  shortDescription String?
  price           Float
  comparePrice    Float?
  costPrice       Float?
  stockCode       String?
  sku             String?
  barcode         String?
  category        String
  status          String   @default("draft")
  featured        Boolean  @default(false)
  isNew           Boolean  @default(false)
  isAvailable     Boolean  @default(true)
  images          Json     // Array of image objects
  sizes           Json     // Array of size objects
  colors          Json     // Array of color objects
  inventory       Json     // Inventory object
  shipping        Json?    // Shipping object
  seo             Json?    // SEO object
  totalStock      Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Collection {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  image       String?
  featured    Boolean  @default(false)
  status      String   @default("draft")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id                String    @id @default(cuid())
  userId            String
  items             Json
  totalAmount       Float
  status            String    @default("pending")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  billingAddress    Json?
  carrier           String?
  estimatedDelivery DateTime?
  notes             String?
  orderNumber       String    @unique
  paymentId         String?
  paymentMethod     String?
  paymentStatus     String    @default("pending")
  shippingAddress   Json
  trackingNumber    String?
  user              User      @relation(fields: [userId], references: [id])
}
